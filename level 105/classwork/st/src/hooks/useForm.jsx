import { useState } from "react";

function useForm( initVal = {}){
    const [data, setData] =  useState(initVal)

    const handleChange = (e) =>{
        const {name,value} = e.target
            setData((prData) =>({
                ...prData, [name]: value
            }))
    }
    return [data, handleChange, setData]

}



export default useForm



// ხელოვნური კაუჭები იმაშ გვეხმარება რომ ერთხელ შევქმნით კაუჭს და შეგვიძლია სხვა კომპონენტებშიც გამოვიყეენოთ და არგვიწიოს ყოველ ჯერზე ბევრი კოდის წერა ასევე არის მარტივი სამართავი აქვს მარტივი ლოგიკა 

// ენკაპსულაცია ეს არის მეთოდი როცა შიდა მონაცემები არ ჩნან და მხოლოდ საჭირო მეთოდების გამოყენებით გამაქვთ ინფორმაცია  და  მომხმარებელი ხედავს მხოლოდ იმას რაც Hook ის return-შია












// 1) შექმენიტ კაუჭი hooks ფოლდერში, ფაილის სახელი useForm, ეს კაუჭი უნდა გვეხმ,არებოდეს ფორმების სამართავად, სადაც ნებისმიერი რაოდენობის ინფუთები შეიძლება იყოს გამოყენებული, ამ კაუჭში შექმენიტ მდგომარეობა სახელად data რომელიც შეინახავს თავიდან ცარიელ ოპბიექტს, აგრეთვე შექმენით ფუნქცია სახელად handleChange რომელსაც გამოიყენებთ ინფუთებში ცვლილების დასაფიქსირებლად, როდესაც ცვლილება მოხდება ინფუთში, იფუთის სახელით შექმენით კუთვნილება და მიანიჭეთ მნიშვნელობა (კომენტარებიოთ ახსენით სიღრმისეულად რაში გვეხმარება ხელოვნური კაუჭები, რა არის ენკაპსულაცია, რა წესებს უნდა მიყვებოდეს ჩვენი კაუჭები) 